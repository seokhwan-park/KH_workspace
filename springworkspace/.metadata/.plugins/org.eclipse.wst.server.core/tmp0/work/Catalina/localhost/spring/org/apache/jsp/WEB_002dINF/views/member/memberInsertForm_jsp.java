/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-10-06 11:27:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\tspan.guide{display:none; font-size:12px; top:12px; right:10px}\r\n");
      out.write("\tspan.ok{color:green;}\r\n");
      out.write("\tspan.error{color:red;}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<h1 align=\"center\">회원가입</h1>\r\n");
      out.write("\t<div class=\"outer\" align=\"center\">\r\n");
      out.write("      <form action=\"minsert.do\" method=\"post\" id=\"joinForm\">\r\n");
      out.write("         <table width=\"500\" cellspacing=\"5\">\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td width=\"150\">* 아이디</td>\r\n");
      out.write("               <td>\r\n");
      out.write("                  <input type=\"text\" name=\"id\" id=\"userId\" required>\r\n");
      out.write("                  <!-- ajax 적용 -->\r\n");
      out.write("                  <span class=\"guide ok\">사용가능</span>\r\n");
      out.write("                  <span class=\"guide error\">사용 불가능</span>\r\n");
      out.write("                  <input type=\"hidden\" name=\"idDuplicateCheck\" id=\"idDuplicateCheck\" value=\"0\"/>\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>* 이름</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"name\" required></input></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>* 비밀번호</td>\r\n");
      out.write("               <td><input type=\"password\" name=\"pwd\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>* 비밀번호확인</td>\r\n");
      out.write("               <td><input type=\"password\" name=\"pwd2\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>성별</td>\r\n");
      out.write("               <td>\r\n");
      out.write("                  <input type=\"radio\" name=\"gender\" value=\"M\">남\r\n");
      out.write("                  <input type=\"radio\" name=\"gender\" value=\"F\">여\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>나이</td>\r\n");
      out.write("               <td><input type=\"number\" min=\"20\" max=\"100\" name=\"age\"></td>            \r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>이메일</td>\r\n");
      out.write("               <td><input type=\"email\" name=\"email\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>전화번호</td>\r\n");
      out.write("               <td><input type=\"tel\" name=\"phone\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            \r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>우편번호</td>\r\n");
      out.write("               <td>\r\n");
      out.write("                  <input type=\"text\" name=\"post\" class=\"postcodify_postcode5\" size=\"6\">\r\n");
      out.write("                  <button type=\"button\" id=\"postcodify_search_button\">검색</button>\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>도로명 주소</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"address1\" class=\"postcodify_address\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>상세 주소</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"address2\" class=\"postcodify_extra_info\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            \r\n");
      out.write("            <!-- jQuery와 Postcodify를 로딩한다. -->\r\n");
      out.write("            <script src=\"//d1p7wdleee1q2z.cloudfront.net/post/search.min.js\"></script>\r\n");
      out.write("            <script>\r\n");
      out.write("               // 검색 단추를 누르면 팝업 레이어가 열리도록 설정한다.\r\n");
      out.write("               $(function(){\r\n");
      out.write("                  $(\"#postcodify_search_button\").postcodifyPopUp();\r\n");
      out.write("               });\r\n");
      out.write("            </script>\r\n");
      out.write("            \r\n");
      out.write("            <tr>\r\n");
      out.write("               <td colspan=\"2\" align=\"center\">\r\n");
      out.write("                  <button onclick='return validate();'>가입하기</button>\t <!-- validate가 0또는 1인데 그값을 return해준다. -->\r\n");
      out.write("                  &nbsp;\r\n");
      out.write("                  <input type=\"reset\" value=\"취소하기\">\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("         </table>\r\n");
      out.write("      </form>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <a href=\"home.do\">시작 페이지로 이동</a>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   <!-- ajax 적용 -->\r\n");
      out.write("   <script>\r\n");
      out.write("   \t\t// 클릭했을때 발생하는 event\r\n");
      out.write("   \t\tfunction validate(){\r\n");
      out.write("   \t\t\t// 아이디 중복 체크 여부\r\n");
      out.write("   \t\t\tif($(\"#idDuplicateCheck\").val()==0){\r\n");
      out.write("   \t\t\t\talert(\"사용가능한 아이디를 입력해주세요\");\r\n");
      out.write("   \t\t\t\t$(\"#userId\").focus();\r\n");
      out.write("   \t\t\t\treturn false;\r\n");
      out.write("   \t\t\t}else{\r\n");
      out.write("   \t\t\t\treturn true;\r\n");
      out.write("   \t\t\t}\r\n");
      out.write("   \t\t}\r\n");
      out.write("   \t\t\r\n");
      out.write("   \t\t// 키보드를 눌렀다 뗐을때 (keyup) 발생하는 event   \t\t\r\n");
      out.write("   \t\t$(function(){\r\n");
      out.write("   \t\t\t$(\"#userId\").on(\"keyup\",function(){\r\n");
      out.write("   \t\t\t\tvar userId=$(this).val();\r\n");
      out.write("   \t\t\t\t\t\r\n");
      out.write("   \t\t\t\tif(userId.length < 5){\r\n");
      out.write("   \t\t\t\t\t$(\".guide\").hide();\r\n");
      out.write("   \t\t\t\t\t$(\"#idDuplicateCheck\").val(0); \t// validate가 0일때와 같은 것..\r\n");
      out.write("   \t\t\t\t\treturn;\r\n");
      out.write("   \t\t\t\t}\r\n");
      out.write("   \t\t\t\t\r\n");
      out.write("   \t\t\t\t$.ajax({\r\n");
      out.write("   \t\t\t\t\turl:\"idCheck.do\",\r\n");
      out.write("   \t\t\t\t\tdata:{id:userId},\r\n");
      out.write("   \t\t\t\t\ttype:\"post\",\r\n");
      out.write("   \t\t\t\t\tsuccess:function(data){\r\n");
      out.write("   \t\t\t\t\t\tif(data==\"ok\"){\r\n");
      out.write("   \t\t\t\t\t\t\t$(\".error\").hide();\r\n");
      out.write("   \t\t\t\t\t\t\t$(\".ok\").show();\r\n");
      out.write("   \t\t\t\t\t\t\t$(\"#idDuplicateCheck\").val(1);\r\n");
      out.write("   \t\t\t\t\t\t}else {\r\n");
      out.write("   \t\t\t\t\t\t\t$(\".error\").hide();\r\n");
      out.write("   \t\t\t\t\t\t\t$(\".ok\").show();\r\n");
      out.write("   \t\t\t\t\t\t\t$(\"#idDuplicateCheck\").val(0);\r\n");
      out.write("   \t\t\t\t\t\t}\r\n");
      out.write("   \t\t\t\t\t},\r\n");
      out.write("   \t\t\t\t\terror:function(request,status,errorData){\r\n");
      out.write("   \t\t\t\t\t\tconsole.log(request.status);\r\n");
      out.write("   \t\t\t\t\t\tconsole.log(request.responseText);\r\n");
      out.write("   \t\t\t\t\t\tconsole.log(errorData);\r\n");
      out.write("   \t\t\t\t\t}\r\n");
      out.write("   \t\t\t\t});\r\n");
      out.write("   \t\t\t});\r\n");
      out.write("   \t\t});\r\n");
      out.write("   </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
